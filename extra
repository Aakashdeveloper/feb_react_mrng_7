https://code.visualstudio.com/download
https://nodejs.org/en/
https://github.com/Aakashdeveloper
https://github.com/

Basic JavaScript
Npm
React = 3
Mock API
json-server
React-JWT(Login Logout)-2
React-GarphQL-1
Depolyment
-> MERN
-> Docker
-> heroku
-> Nginx
Github
React_hooks -1
////////////////////
Basic React Native=1
React-Redux =1
React-Redux =1
Testing Jest Enzime
React-Saga -1
React-with-typescript-1
--------NOT--------------
API
GarphQL
Login/Logout

React
> React is a javascript lib/framework that
help to build single page application
using component based structure 

>open source
npm > node package manager

JSON >JavaScript Object Notation
way to represent data

[
    {
        id:1,
        name:'John';
    },
    {
        id:2,
        name:'Ankit';
    }
]


package.json
> Entry point to application
> Main file
> all th scripts
    > start
    > Testing
    > build
> all packages

//////
Step to generate package.json

> open cmd/terminal
> go inside the folder
> npm init
> answer all questions
> type "yes"

/////Step to install packages/////

> open cmd/terminal
> go inside the folder
> npm i packagename

//////////////////////
#window

//only one time
> open cmd as admin
> npm i -g create-react-app

//every time for new app
> open cmd
> create-react-app appname

#mac

//only one time
> open terminal
> sudo npm i -g create-react-app

//every time for new app
> open cmd
> create-react-app appname

//////////////////
ClassComponent
> Logical Component
> Display as well api call
> We can maintain State

Functional component
> Dumb Component
> Display purpose
> We cannot maintain State


map in javascript
filter in javascript
indexof in javascript


var a = [1,4,6,3,7,4,5,6,2,4,5,7,7,3,2,5,9]

a.map((data) => {return data})
a.map((data) => {return data})
(17) [1, 4, 6, 3, 7, 4, 5, 6, 2, 4, 5, 7, 7, 3, 2, 5, 9]
var a = [1,4,6,3,7,4,5,6,2,4,5,7,7,3,2,5,9]

a.map((data) => {return data*2})
(17) [2, 8, 12, 6, 14, 8, 10, 12, 4, 8, 10, 14, 14, 6, 4, 10, 18]
var a = [1,4,6,3,7,4,5,6,2,4,5,7,7,3,2,5,9]

a.map((data) => {return `<h1>${data*2}<h1>`})
(17) ["<h1>2<h1>", "<h1>8<h1>", "<h1>12<h1>", "<h1>6<h1>", "<h1>14<h1>"]

var a = [1,4,6,3,7,4,5,6,2,4,5,7,7,3,2,5,9]
a.filter((data)=>{return data>5})
(6) [6, 7, 6, 7, 7, 9]


parent => Child (props)
child => parent (props with Function)

var city = ["Delhi","Mumbai","Amsterdam"]

city.indexof("Mumbai")
1
city.indexof("Amsterdam")
2
city.indexof("Delhi")
0
city.indexof("Paris")
-1
city.indexof("Pune")
-1


function add(a,b){
    return a+b
}

add('x','y')

match > for params
location > for query params
history > for redirect

(get) hotels>         https://developerfunnel.herokuapp.com/hotels
(get) hotelwrtcity >  https://developerfunnel.herokuapp.com/hotels?city=6
(get) hoteldetails >  https://developerfunnel.herokuapp.com/hotelsdetails/1
(get) onbasisoftrip > https://developerfunnel.herokuapp.com/hotellist/1
(get) roomfilter >    https://developerfunnel.herokuapp.com/hotellist/1?roomtype=1
(get) costfilter >    https://developerfunnel.herokuapp.com/hotellist/1?hcost=1000&lcost=500
(get) cityname >      https://developerfunnel.herokuapp.com/location
(get) rooms >         https://developerfunnel.herokuapp.com/rooms
(get) triptype>       https://developerfunnel.herokuapp.com/booking
(get) bookingdetails> https://developerfunnel.herokuapp.com/allBooking
(post)placebooking >  https://developerfunnel.herokuapp.com/placeBook

constructor > render> renderCity(state="")> componentDidMount(updatestate)
> render > renderCity(state=data)

//dummy api
npm i -g json-server 

json-server --watch db.json --port 8900


//////////////
/******GetAllUser*****/
(GET)> http://localhost:5000/api/auth/users

/******Register*****/
(POST)> http://localhost:5000/api/auth/register
(body) => {"name":"Aakash", "email":"aa@gmail.com","password":"12345678","role":"user?"}


/******Login*****/
(POST) => http://localhost:5000/api/auth/login
(body)  => {"email":"aa@gmail.com","password":"12345678"}
(response)=> {auth:true,token:'dgsdg'}

/******UserInfo*****/
(GET) => http://localhost:5000/api/auth/userinfo
(Header) => {'x-access-token':'token value from login'}
(response) => {userinfo}

https://docs.github.com/en/developers/apps/authorizing-oauth-apps

https://www.youtube.com/c/DeveloperFunnel/videos

npm i apollo-boost apollo-graphql graphql graphql-tag react-apollo 
https://git-scm.com/downloads

//first time form new folder

git init
git add .
git commit -m "first commit"
git remote add origin https://github.com/Aakashdeveloper/febprod.git
git push -u origin master

//next all time
git add .
git commit -m "first commit"
git push

git pull

git clone https://github.com/Aakashdeveloper/febprod

npm i -g create-react-native-app
create-react-native-app appname

npm run web


npm i redux react-redux redux-logger